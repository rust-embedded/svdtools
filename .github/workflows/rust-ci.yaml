name: Rust CI

on:
  push:
    branches: [ staging, trying, master ]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build
      - run: cargo doc

  test:
    name: Test
    env:
      RUSTFLAGS: "-D warnings"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo test

  test_convert:
    name: Test Convert
    env:
      RUSTFLAGS: "-D warnings"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: |
          cargo run --release -- convert res/example1/stm32l4x2.svd stm32l4x2.yaml
          cargo run --release -- convert res/example1/stm32l4x2.svd stm32l4x2.json
          cargo run --release -- convert stm32l4x2.yaml stm32l4x2.svd
          cargo run --release -- convert stm32l4x2.json stm32l4x2.svd

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      # not using clippy-check due to this issue:
      # https://github.com/actions-rs/clippy-check/issues/2
      - run: cargo clippy -- --deny warnings

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt -- --check
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - stm32
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: rustfmt
      - name: Install svdtools
        run: |
          cargo install svdtools --path .
      - name: Check
        run: env SVDTOOLS=svdtools bash tools/check_${{ matrix.target }}.sh
